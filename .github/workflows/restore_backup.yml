name: Restore Backup to Prod

on:
  workflow_dispatch:
    inputs:
      backup_file:
        description: "Enter the exact backup filename (e.g., backup_20251005_1530.json)"
        required: true
      confirm_restore:
        description: "Type YES to confirm you want to overwrite the production DB"
        required: true
        default: "NO"

jobs:
  restore-backup:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_BUCKET_BACKUP: ${{ vars.AWS_BUCKET_BACKUP }}

    steps:
      - name: Safety Confirmation
        run: |
          if [ "${{ github.event.inputs.confirm_restore }}" != "YES" ]; then
            echo "❌ Confirmation missing. Set confirm_restore=YES to proceed."
            exit 1
          fi
          echo "✅ Confirmation received."

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install "boto3==1.38.37" "botocore>=1.38.37,<1.39.0" "s3transfer>=0.13.0,<0.14.0"
          pip install -r requirements.txt
          pip install awscli

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download backup from S3
        run: |
          BACKUP_FILE="${{ github.event.inputs.backup_file }}"
          aws s3 cp "s3://${{ env.AWS_BUCKET_BACKUP }}/$BACKUP_FILE" . || exit 1
          echo "✅ Backup downloaded successfully: $BACKUP_FILE"

      - name: Restore backup
        run: |
          chmod +x scripts/sync

