name: Sync Data (Dev ‚Üí Prod)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Choose mode: dry-run or full-sync"
        required: true
        default: "dry-run"
        type: choice
        options:
          - dry-run
          - full-sync

jobs:
  sync-data:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.event.inputs.mode == 'full-sync' && 'production' || 'development' }}

    env:
      AWS_REGION: ap-southeast-1
      AWS_BUCKET_DEV_DUMP: jiujitsuteria-mediia/dev-dumps
      AWS_BUCKET_BACKUP: jiujitsuteria-mediia/backups
      DEV_DB_FILE: db.sqlite3

    steps:
      # -------------------------
      # 1Ô∏è‚É£ Checkout repository
      # -------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------
      # 2Ô∏è‚É£ Setup Python environment
      # -------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # -------------------------
      # 3Ô∏è‚É£ Install dependencies (with pinned versions)
      # -------------------------
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install boto3==1.38.37 botocore>=1.38.37,<1.39.0 s3transfer>=0.13.0,<0.14.0
          pip install -r requirements.txt
          pip install awscli

      # -------------------------
      # 4Ô∏è‚É£ Configure AWS credentials
      # -------------------------
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # -------------------------
      # 5Ô∏è‚É£ Ensure Dev SQLite DB is available
      # -------------------------
      - name: Download Dev SQLite DB from S3 (or warn if missing)
        run: |
          echo "Checking if dev database exists locally..."
          if [ ! -f "${{ env.DEV_DB_FILE }}" ]; then
            echo "Attempting to download dev DB from S3..."
            if aws s3 ls "s3://${{ env.AWS_BUCKET_DEV_DUMP }}/${{ env.DEV_DB_FILE }}" > /dev/null 2>&1; then
              aws s3 cp "s3://${{ env.AWS_BUCKET_DEV_DUMP }}/${{ env.DEV_DB_FILE }}" .
              echo "‚úÖ Dev database downloaded successfully."
            else
              echo "‚ö†Ô∏è  WARNING: Dev DB not found in S3. Continuing with local context..."
            fi
          else
            echo "‚úÖ Dev DB already present locally."
          fi

          if [ ! -f "${{ env.DEV_DB_FILE }}" ]; then
            echo "‚ùå ERROR: db.sqlite3 not found locally or in S3. Please upload it to S3 or ensure dev DB exists."
            exit 1
          fi

      # -------------------------
      # 6Ô∏è‚É£ Run data sync script (dry-run or full-sync)
      # -------------------------
      - name: Run sync_data.sh
        run: |
          chmod +x scripts/sync_data.sh
          if [ "${{ github.event.inputs.mode }}" == "dry-run" ]; then
            echo "üîç Running dry-run..."
            ./scripts/sync_data.sh --dry-run
          else
            echo "üöÄ Running full data sync (Prod will be updated)..."
            ./scripts/sync_data.sh
          fi

      # -------------------------
      # 7Ô∏è‚É£ Completion log
      # -------------------------
      - name: Sync Complete
        if: always()
        run: |
          echo "‚úÖ Sync data job finished successfully (mode: ${{ github.event.inputs.mode }})"

