name: Sync Data (Dev → Prod)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Choose mode: dry-run or full-sync"
        required: true
        default: "dry-run"
        type: choice
        options:
          - dry-run
          - full-sync

jobs:
  sync-data:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_BUCKET_DEV_DUMP: ${{ vars.AWS_BUCKET_DEV_DUMP }}
      AWS_BUCKET_BACKUP: ${{ vars.AWS_BUCKET_BACKUP }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install "boto3==1.38.37" "botocore>=1.38.37,<1.39.0" "s3transfer>=0.13.0,<0.14.0"
          pip install -r requirements.txt
          pip install awscli

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download Dev SQLite DB
        run: |
          if [ ! -f "db.sqlite3" ]; then
            aws s3 cp "s3://${{ env.AWS_BUCKET_DEV_DUMP }}/db.sqlite3" .
          fi
          if [ ! -f "db.sqlite3" ]; then
            echo "❌ db.sqlite3 not found. Upload to S3 or ensure it exists locally."
            exit 1
          fi

      - name: Run sync_data.sh
        run: |
          chmod +x scripts/sync_data.sh
          if [ "${{ github.event.inputs.mode }}" = "dry-run" ]; then
            ./scripts/sync_data.sh --dry-run
          else
            ./scripts/sync_data.sh
          fi

      - name: Sync Complete
        if: always()
        run: echo "✅ Sync data job finished successfully (mode: $MODE)"

