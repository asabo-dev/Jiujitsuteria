name: Sync BJJ App Data (Dev ‚Üí Prod)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Choose mode: dry-run or full-sync"
        required: true
        default: "dry-run"
        type: choice
        options:
          - dry-run
          - full-sync

jobs:
  sync-data:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_BUCKET_DEV_DUMP: ${{ vars.AWS_BUCKET_DEV_DUMP }}
      AWS_BUCKET_BACKUP: ${{ vars.AWS_BUCKET_BACKUP }}
      REMOTE_HOST: "ec2-18-142-37-231.ap-southeast-1.compute.amazonaws.com"
      ALLOWED_MODELS="bjj.Video bjj.Tag bjj.Position bjj.Technique bjj.Guard"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install boto3==1.38.37 botocore==1.38.37 s3transfer==0.13.1
          pip install -r requirements.txt
          pip install awscli jq

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Add SSH key to known_hosts
        run: ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts

      - name: Ensure Dev dump JSON exists
        run: |
          if ! aws s3 ls "s3://${AWS_BUCKET_DEV_DUMP}/bjj_data.json" > /dev/null 2>&1; then
            echo "‚ùå Dev app data JSON not found in S3. Please upload it first."
            exit 1
          fi
          echo "‚úÖ Dev app data JSON exists in S3."

      - name: Download Dev dump JSON
        run: |
          aws s3 cp "s3://${AWS_BUCKET_DEV_DUMP}/bjj_data.json" ./bjj_data.json

      - name: Validate Dev JSON Contents
        run: |
          echo "üîç Validating that DEV JSON contains only allowed app models..."
          MODELS_IN_FILE=$(jq -r '.[].model' bjj_data.json | sort -u)
          for m in $MODELS_IN_FILE; do
            if ! [[ " $ALLOWED_MODELS " =~ " $m " ]]; then
              echo "‚ùå DEV dump contains disallowed model: $m"
              exit 1
            fi
          done
          echo "‚úÖ DEV JSON validation passed. Only allowed models present."

      - name: Run sync_data.sh
        run: |
          chmod +x scripts/sync_data.sh
          if [ "${{ github.event.inputs.mode }}" = "dry-run" ]; then
            echo "üîç Running dry-run..."
            ./scripts/sync_data.sh --dry-run
          else
            echo "üöÄ Running full data sync..."
            ./scripts/sync_data.sh
          fi

      - name: Sync Complete
        if: always()
        run: echo "‚úÖ Sync data job finished successfully."

