name: Sync Data (Dev ‚Üí Prod)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Choose mode: dry-run or full-sync"
        required: true
        default: "dry-run"
        type: choice
        options:
          - dry-run
          - full-sync

jobs:
  sync-data:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_BUCKET_DEV_DUMP: ${{ vars.AWS_BUCKET_DEV_DUMP }}
      AWS_BUCKET_BACKUP: ${{ vars.AWS_BUCKET_BACKUP }}
      DEV_DB_FILE: db.sqlite3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies (with pinned versions)
        run: |
          python3 -m pip install --upgrade pip
          pip install "boto3==1.38.37" "botocore>=1.38.37,<1.39.0" "s3transfer>=0.13.0,<0.14.0"
          pip install -r requirements.txt
          pip install awscli

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure Dev SQLite DB exists
        run: |
          if [ ! -f "${DEV_DB_FILE}" ]; then
            echo "Attempting to download dev DB from S3..."
            if aws s3 ls "s3://${AWS_BUCKET_DEV_DUMP}/${DEV_DB_FILE}" > /dev/null 2>&1; then
              aws s3 cp "s3://${AWS_BUCKET_DEV_DUMP}/${DEV_DB_FILE}" .
              echo "‚úÖ Dev database downloaded successfully."
            else
              echo "‚ùå ERROR: Dev DB not found in S3. Please upload it."
              exit 1
            fi
          else
            echo "‚úÖ Dev DB already exists locally."
          fi

      - name: Run sync_data.sh
        run: |
          chmod +x scripts/sync_data.sh
          if [ "${{ github.event.inputs.mode }}" = "dry-run" ]; then
            echo "üîç Running dry-run..."
            ./scripts/sync_data.sh --dry-run
          else
            echo "üöÄ Running full data sync (Prod will be updated)..."
            ./scripts/sync_data.sh
          fi

      - name: Sync Complete
        if: always()
        run: echo "‚úÖ Sync data job finished successfully"

