name: Sync BJJ App Data (Dev → Prod)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Choose mode: dry-run or full-sync"
        required: true
        default: "dry-run"
        type: choice
        options:
          - dry-run
          - full-sync

jobs:
  sync-data:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_BUCKET_DEV_DUMP: ${{ vars.AWS_BUCKET_DEV_DUMP }}
      AWS_BUCKET_BACKUP: ${{ vars.AWS_BUCKET_BACKUP }}
      REMOTE_HOST: ec2-18-142-37-231.ap-southeast-1.compute.amazonaws.com

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          python3 -m pip install --upgrade pip
          pip install "boto3==1.38.37" "botocore>=1.38.37,<1.39.0" "s3transfer>=0.13.0,<0.14.0"
          pip install -r requirements.txt
          pip install awscli

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure SSH key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          eval "$(ssh-agent -s)"
          ssh-add private_key.pem

      - name: Add SSH host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts

      - name: Ensure local Dev DB exists (handled by script)
        run: |
          if [ ! -f db.sqlite3 ]; then
            echo "No local dev DB found — will be downloaded automatically by script if needed."
          fi

      - name: Run Sync Data Script
        run: |
          chmod +x scripts/sync_data.sh
          if [ "${{ github.event.inputs.mode }}" = "dry-run" ]; then
            echo "🔍 Running dry-run..."
            ./scripts/sync_data.sh --dry-run
          else
            echo "🚀 Running full data sync..."
            ./scripts/sync_data.sh
          fi

      - name: Rotate old backups (keep latest 3)
        run: |
          echo "🌀 Rotating old backups in S3..."
          aws s3 ls "${{ env.AWS_BUCKET_BACKUP }}/" | sort -r | awk 'NR>3 {print $4}' | while read -r old_backup; do
            if [ -n "$old_backup" ]; then
              echo "Deleting old backup: $old_backup"
              aws s3 rm "${{ env.AWS_BUCKET_BACKUP }}/$old_backup"
            fi
          done
          echo "✅ Backup rotation complete."

      - name: Sync Complete
        if: always()
        run: |
          echo "✅ Sync data job finished successfully (mode: ${{ github.event.inputs.mode }})"

